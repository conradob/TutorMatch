# source: http://localhost:4466
# timestamp: Mon May 13 2019 00:17:42 GMT+0100 (Western European Summer Time)

type AggregateTutor {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createTutor(data: TutorCreateInput!): Tutor!
  updateTutor(data: TutorUpdateInput!, where: TutorWhereUniqueInput!): Tutor
  deleteTutor(where: TutorWhereUniqueInput!): Tutor
  upsertTutor(where: TutorWhereUniqueInput!, create: TutorCreateInput!, update: TutorUpdateInput!): Tutor!
  updateManyTutors(data: TutorUpdateManyMutationInput!, where: TutorWhereInput): BatchPayload!
  deleteManyTutors(where: TutorWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  tutors(where: TutorWhereInput, orderBy: TutorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tutor]!
  tutor(where: TutorWhereUniqueInput!): Tutor
  tutorsConnection(where: TutorWhereInput, orderBy: TutorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TutorConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  tutor(where: TutorSubscriptionWhereInput): TutorSubscriptionPayload
}

type Tutor implements Node {
  id: ID!
  name: String!
  description: String!
}

"""A connection to a list of items."""
type TutorConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TutorEdge]!
  aggregate: AggregateTutor!
}

input TutorCreateInput {
  id: ID
  name: String!
  description: String!
}

"""An edge in a connection."""
type TutorEdge {
  """The item at the end of the edge."""
  node: Tutor!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TutorOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
}

type TutorPreviousValues {
  id: ID!
  name: String!
  description: String!
}

type TutorSubscriptionPayload {
  mutation: MutationType!
  node: Tutor
  updatedFields: [String!]
  previousValues: TutorPreviousValues
}

input TutorSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TutorSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TutorSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TutorSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TutorWhereInput
}

input TutorUpdateInput {
  name: String
  description: String
}

input TutorUpdateManyMutationInput {
  name: String
  description: String
}

input TutorWhereInput {
  """Logical AND on all given filters."""
  AND: [TutorWhereInput!]

  """Logical OR on all given filters."""
  OR: [TutorWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TutorWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
}

input TutorWhereUniqueInput {
  id: ID
}
